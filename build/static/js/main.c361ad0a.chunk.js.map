{"version":3,"sources":["pages/Detail.js","components/PokemonThumnail.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Detail","state","pokemon","_infoPokemon","id","axios","get","then","res","data","setState","_getType","types","objTypes","Object","values","type","map","item","slot","name","_getImage","imagesA","otherImg","other","imgDefault","dream_world","front_default","pokemonId","this","props","match","params","sprites","style","image","className","src","Component","PokemonThumnail","to","alt","Home","useState","allPokemons","setAllPokemons","loadMore","setLoadMore","getAllPokemons","a","fetch","json","next","createPokemonObject","results","forEach","currentList","useEffect","index","onClick","e","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c361ad0a.chunk.js","sourcesContent":["import  { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios';\nimport '../assets/css/Detail.css'\n\nexport class Detail extends Component {\n    static propTypes = {\n        match: PropTypes.shape({\n            params: PropTypes.object,\n            isExact: PropTypes.bool,\n            path: PropTypes.string,\n            url: PropTypes.string\n        })\n    }\n\n    state = {pokemon: {}}\n\n    _infoPokemon = ({ id }) => {\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`)\n        .then(res => {\n            const pokemon = res.data\n            this.setState({pokemon})\n        })\n    }\n\n    componentDidMount () {\n        const { pokemonId } = this.props.match.params\n        this._infoPokemon({id: pokemonId})\n    }\n\n    _getType = (types = {}) => {\n        const objTypes = Object.values(types);\n        const type = objTypes.map(item => {\n            if (item.slot === 1) {\n                return item.type.name\n            }\n        })\n        return type[0]\n    }\n\n    _getImage = (imagesA = {}) => {\n        const otherImg = imagesA.other\n        if (typeof(otherImg) !== \"undefined\") {\n            let imgDefault = otherImg.dream_world.front_default\n            return imgDefault\n        }\n    }\n\n    render() {\n        const { id, name, types, sprites } = this.state.pokemon\n        const style = `card ${this._getType(types)}`\n        const image = this._getImage(sprites)\n        return (\n            <div className={style}>\n                <div className=\"thumbnail\">\n                    <img src={image}/>\n                </div>\n                <div className=\"right\">\n                    <h1 className=\"tt-uppercase\">{name}</h1>\n                </div>\n                <div className=\"bottom\">\n                    \n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst PokemonThumnail = ({id, name, image, type}) => {\n    const style = `thumb-container ${type}`\n    return (\n        \n        <div className={style}>\n            <Link to={`/detail/${id}`} className=\"href-no-style\">\n                <div className=\"number\">\n                    <small>#0{id}</small>\n                </div>\n                <img src={image} alt={name}/>\n                <div className=\"detail-wrapper\">\n                    <h3>{name}</h3>\n                    <small>Type: {type}</small>\n                </div>\n            </Link>\n        </div>\n            \n    )\n}\n\nexport default PokemonThumnail","import { useEffect, useState } from \"react\";\nimport PokemonThumnail from \"../components/PokemonThumnail\";\n\nfunction Home() {\n    const [allPokemons, setAllPokemons] = useState([])\n    const [loadMore, setLoadMore] = useState('https://pokeapi.co/api/v2/pokemon?limit=20')\n\n    const getAllPokemons = async() => {\n        const res = await fetch(loadMore)\n        const data = await res.json()\n\n        setLoadMore(data.next)        \n        createPokemonObject(data.results)\n    }\n    \n    const createPokemonObject = (results) => {\n        results.forEach( async pokemon => {\n            const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)\n            const data = await res.json()\n            setAllPokemons(currentList => [...currentList, data])\n        })\n    }\n\n    useEffect(() => {\n        getAllPokemons()\n    }, [])\n\n    const _loadMore = (e) => {\n        getAllPokemons()\n    }\n    \n    return (\n        <div>\n            <h1 className=\"text-center\">Pokemon Evolution</h1>\n            <div className='pokemon-container'>\n                <div className='all-container'>\n                {allPokemons.map((pokemon, index) =>\n                    <PokemonThumnail\n                        id={pokemon.id}\n                        name={pokemon.name}\n                        image={pokemon.sprites.other.dream_world.front_default}\n                        type={pokemon.types[0].type.name}\n                        key={index}/>\n                )}\n                </div>\n                <button className='load-more' onClick={_loadMore}>Load more</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Home","import { Switch, Route } from 'react-router-dom'\nimport { Detail } from \"./pages/Detail\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <div className='app-container'>\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route path='/detail/:pokemonId' component={Detail} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}